# -*- coding: utf-8 -*-
"""qubic_equation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JmtCpDkg36G3ZXtOXJ14q46Yn5vlPPRH
"""

from tensorflow.keras.layers import Dense
from tensorflow.keras import Sequential
import numpy as np

model = Sequential([
    Dense(1,input_shape=[1]),
    Dense(128,activation='relu'),
    Dense(128,activation='relu'),
    Dense(1)
])

model.compile(optimizer='adam', loss='mean_squared_error')
x = np.linspace(-10, 10, 10000)
y = 3 * pow(x, 3) +7 * pow(x, 2) -12 * x + 2
print(x,y)

model.fit(x,y,epochs=200)

inData=[0,1,-1,2,-2,3,-3]
out=model.predict(inData)
num=len(inData)
for i in range(num):

  #orginal calculated y for data
  orginal_out = 3 * inData[i] * inData[i] * inData[i] + 7 * inData[i] * inData[i] - 12 * inData[i] + 2

  #compare predicted value of y with original for input data
  print(f"x : {inData[i]} =>  original y : {orginal_out} => pre y : {float(out[i])}")